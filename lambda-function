	import boto3	
	def lambda_handler(event, context):	
	
	    #get region and account
	    client = boto3.client('lambda')	
	    #confirm function name is the same
	    response = client.get_function(FunctionName='SnsAuthFunction')	
	    locationString = response['Code']['Location']	
	    locationArray = locationString.split('-')	
	    country=locationArray[1]	
	    region=locationArray[2]	
	    area=locationArray[3]	
	    realmString=country+'-'+region+'-'+area	
	    print realmString	
	    accountString = locationArray[7].split('/')[2]	
	    print accountString	
	
	    #get user, password, and action
	    user = event['user']	
	    pwd = event['pwd']	
	    #get action	
	    action = event['action']	
	    if '-' in user or '-' in pwd:	
	        return 'username or password cannot contain a hyphen'	
	    print action +'-'+ user +'-'+ pwd	
	    snsString = 'snsAuth-'+ user +'-'+ pwd	
	
	    #if user/password exists, return topic already exists	
	    sns = boto3.resource('sns')	
	    topic = sns.Topic('arn:aws:sns:'+realmString+':'+accountString+':'+snsString)	
	    try: checkTopic = topic.load()	
	    except: checkTopic = ''	
	
	    #if signup action, check user, then create	
	    if action == 'signup':	
	        if checkTopic is None:	
	            print 'topic exists'	
	            return 'topicExists'	
	        else:	
	            client = boto3.client('sns')	
	            response = client.create_topic(Name=snsString)	
	            print response	
	            return 'signedUp'	
	    #elif login	action, confirm topic exists and retrun authenticated success
	    elif action == 'login':	
	        if checkTopic is None:	
	            print 'logged in'	
	            return 'loggedIn'	
	        else:	
	            print 'auth error'	
	            return 'authError'	
